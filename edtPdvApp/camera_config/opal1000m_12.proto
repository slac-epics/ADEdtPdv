#
# Opal Family Serial Protocol
#
# Messages start w/ STX and end w/ ETX
# STX is the @ character, 0x40
# ETX is the CR character, 0x0D
#
# Successful replies start w/ an ACK, hex 0x06, followed by reply content, if any
# Unsuccesful commands reply w/ a NAK, the % character, 0x25
#
InTerminator	= CR;
OutTerminator	= CR;
PeekSize		= 0;
ReplyTimeout	= 800;
ReadTimeout		= 100;
WriteTimeout	= 500;
ExtraInput		= Ignore;

GetQStr
{
    out "@\$1?";    in  ACK "@\"%#s";
    @init { out "@\$1?";    in  ACK "@\"%#s"; }
}

#GetCCE0
#{
#    out "@CCE?";    in  ACK "@%d;%*d";
#    @init { out "@CCE?";    in  ACK "@%d;%*d"; }
#}
#
#GetCCE1
#{
#    out "@CCE?";    in  ACK "@%*d;%d";
#    @init { out "@CCE?";    in  ACK "@%*d;%d"; }
#}
#
#GetFST0
#{
#    out "@FST?";    in  ACK "@%d;%*d";
#    @init { out "@FST?";    in  ACK "@%d;%*d"; }
#}
#
#GetFST1
#{
#    out "@FST?";    in  ACK "@%*d;%d";
#    @init { out "@FST?";    in  ACK "@%*d;%d"; }
#}

GetInt
{
    out "@\$1?";    in  ACK "@%d";
    @init { out "@\$1?";    in  ACK "@%d"; }
}

GetIntF1
{
    out "@\$1?";    in  ACK "@%d;%*d";
    @init { out "@\$1?";    in  ACK "@%d;%*d"; }
}

GetIntF2
{
    out "@\$1?";    in  ACK "@%*d;%d";
    @init { out "@\$1?";    in  ACK "@%*d;%d"; }
}

GetTempC
{
    out "@TM?";    in  ACK "@%d;%*d";
    @init {
	out "@TM?";    in  ACK "@%d;%*d";
	}
}

GetTempF
{
    out "@TM?";    in  ACK "@%*d;%d";
    @init {
	out "@TM?";    in  ACK "@%*d;%d";
	}
}

GetSerial
{
    out "@SN?";    in  ACK "@\"%d";
    @init { out "@SN?";    in  ACK "@\"%d"; }
}

GetStr
{
    out "@\$1?";    in  ACK "@%#s";
    @init { out "@\$1?";    in  ACK "@%#s"; }
}

SetInt
{
    InTerminator	= ACK;
    out "@\$1%d";   in  "";
}

SetIntNoInit
{
    InTerminator	= ACK;
    out "@\$1%d";   in  "";
}

SetStr
{
    InTerminator	= ACK;
    out "@\$1%s";   in  "";
}

SetIntF1
{
    InTerminator	= ACK;
    out "@\1%d;%(\$2)";   in  "";
}

SetIntF2
{
    InTerminator	= ACK;
    out "@\1%(\$2);%d";   in  "";
}

SetTrigIn
{
    InTerminator	= ACK;
    out "@CCE%d;%(\$1:OpalTriggerPolarity)d";   in  "";
}

SetTrigPol
{
    InTerminator	= ACK;
    out "@CCE%(\$1:OpalTriggerInput)d;%d";   in  "";
}
