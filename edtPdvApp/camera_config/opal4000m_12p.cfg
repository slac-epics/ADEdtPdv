#
# CAMERA_MODEL "Adimec 4000m/CL Mono CamLink 12-bit camera pulse"
#

camera_class:           "Adimec"
camera_model:           "4000m/CL"
camera_info:            "12-bit, camera pulse"

width:                  2336
height:                 1752
depth:                  12
extdepth:               12

# baud rate for adimec is 57.6 Kbaud
#
serial_baud: 57600

# Framesync method
# Don't use framesync w/ Opal as it can cause hsync issues
method_framesync: FRAMESYNC_OFF

# Initialize camera to:
#	CCE4;0	# Trigger input is I/O connector, active low
#   MO1		# Mode 1 (Normal control, integration via trigger pulse width)
#	OR12	# Output resolution 12 bits
#	SO0		# Turn off overscan
#	VR1		# Enable vertical remapping so image can be read out w/o a custom deinterleave routine
# (Note: May want to revisit vertical remapping as it delays output 1/2 frame time, ~4.3ms)
# (see Adimec operating and technical manual for complete info on
# Adimec's serial command set)
#
serial_init: "@CCE4;0:@MO1:@OR12:@OS0:@VR1"

# interlace method
# only for interleaved and some dual channel cameras
# determines how image is deinterleaved for display -- BYTE_INTLV is only
# one of many available methods -- see *_INTLV in pdv_dependent.h and
# camera configuration guide for more
#method_interlace:	WORD_INTLV_TOPBOTTOM

# adimec serial exposure method is implemented internally to
# libpdv. min and max are just used by apps who want to use
# them, e.g. pdvshow to set limits for sliders
#
shutter_speed_min: 1
shutter_speed_max: 4000
method_camera_shutter_timing: ADIMEC_SERIAL

# serial gain method for adimec embedded in libpdv
#
gain_min:               1
gain_max:               8

# serial offset (black level) method for adimec embedded in
# libpdv. note that offset has 2 channels, but pdvshow only has
# one slider so it controls both the same. user apps can control
# channel offset separately however, via pdv_set_blacklevel_adimec
# or pdv_serial_command()
#
offset_min:             0
offset_max:             4095

htaps: 2

# camera link data path register bits (hex):
# 0-3: number of bits per pixel - 1
# 4-7: number of channels - 1
#
CL_DATA_PATH_NORM:      1b

CL_CFG_NORM:            02

# region of interest start and area
# vskip/hskip is how many pixels to skip before ROI, vert and horiz
# vactv/hactv is how many pixels to DMA to memory after skip
#
vskip:                  0
hskip:                  0
hactv:                  2336
vactv:                  1752

