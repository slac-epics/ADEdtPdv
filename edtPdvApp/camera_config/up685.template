#
# EPICS database for
# UNIQ UP685/UP685CL Camera
#

record( stringin, "$(P)$(R)CamModel" )
{
	field( VAL,  "up685" )
	field( PINI, "YES" )
}

record( stringin, "$(P)$(R)CamModelScreen" )
{
	field( VAL,  "edtPdvScreens/up685.edl" )
	field( PINI, "YES" )
}

record( seq, "$(P)$(R):DoReport" )
{
	field( DESC,	"Do delayed report" )
	field( DOL1,    "0" )
	field( DLY1,    "2" )
	field( LNK1,    "$(P)$(R):Report PP" )
}

record( longin,	"$(P)$(R):Report" )
{
	field( DESC,	"Report camera settings" )
	field( DTYP,	"stream" )
	field( INP,		"@up685.proto Report $(PORT).SER" )
}

record( longin,	"$(P)$(R):ReadGain" )
{
	field( DESC,	"Gain from camera report" )
	field( DTYP,	"stream" )
	field( INP,		"@up685.proto ReadGain $(PORT).SER" )
	field( SCAN,	"I/O Intr" )
}

record( longin,	"$(P)$(R):ReadReference" )
{
	field( DESC,	"Reference from camera report" )
	field( DTYP,	"stream" )
	field( INP,		"@up685.proto ReadReference $(PORT).SER" )
	field( SCAN,	"I/O Intr" )
}

record( longin,	"$(P)$(R):ReadDoubleSpeed" )
{
	field( DESC,	"DblSpd from camera report" )
	field( DTYP,	"stream" )
	field( INP,		"@up685.proto ReadDoubleSpeed $(PORT).SER" )
	field( SCAN,	"I/O Intr" )
}

record( ao, "$(P)$(R):Gain" )
{
	field( DESC,	"Camera gain (0..1023)" )
	field( DRVH,	"1023" )
	field( DRVL,	"0" )
	field( HOPR,	"1023" )
	field( LOPR,	"0" )
	field( PINI,	"YES" )
	field( FLNK,	"$(P)$(R):SetGain" )
}

record( ao, "$(P)$(R):SetGain" )
{
	field( DESC,	"Set camera gain (0..1023)" )
	field( DOL,		"$(P)$(R):Gain" )
	field( OMSL,	"closed_loop" )
	field( DTYP,	"stream" )
	field( OUT,		"@up685.proto SetGain $(PORT).SER" )
	field( DRVH,	"1023" )
	field( DRVL,	"0" )
	field( PINI,	"YES" )
	field( FLNK,	"$(P)$(R):DoReport" )
}

record( mbbi,	"$(P)$(R):Shutter" )
{
	field( DESC,	"Camera shutter speed" )
	field( ZRVL,	"0"	)
	field( ONVL,	"1"	)
	field( TWVL,	"2"	)
	field( THVL,	"3"	)
	field( FRVL,	"4"	)
	field( FVVL,	"5"	)
	field( SXVL,	"6"	)
	field( SVVL,	"7"	)
	field( EIVL,	"8"	)
	field( NIVL,	"9"	)
	field( TEVL,	"10"	)
	field( ELVL,	"11"	)
	field( TVVL,	"12"	)
	field( TTVL,	"13"	)
	field( FTVL,	"14"	)
	field( FFVL,	"15"	)
	field( ZRST,	"1/110"	)
	field( ONST,	"1/220"	)
	field( TWST,	"1/440"	)
	field( THST,	"1/900"	)
	field( FRST,	"1/1800"	)
	field( FVST,	"1/3500"	)
	field( SXST,	"1/4500"	)
	field( SVST,	"1/7000"	)
	field( EIST,	"1/9000"	)
	field( NIST,	"1/14000"	)
	field( TEST,	"1/18000"	)
	field( ELST,	"1/22000"	)
	field( TVST,	"1/28000"	)
	field( TTST,	"1/37000"	)
	field( FTST,	"1/55000"	)
	field( FFST,	"1/110000"	)
	field( PINI,	"YES" )
}

record( calcout, "$(P)$(R):CalcShutterOut" )
{
	field( DESC,	"Calc shtr val" )
	field( INPA,	"$(P)$(R):Shutter CPP" )
	field( INPB,	"$(P)$(R):ShutterMode CPP" )
	field( CALC,	"B ? A : (A>5?A-1:A)" )
	field( OUT,		"$(P)$(R):SetRawShutter PP" )
	field( OOPT,	"On Change" )
}

record( longout, "$(P)$(R):SetRawShutter" )
{
	field( DESC,	"Numeric shutter value" )
	field( DTYP,	"stream" )
	field( OUT,		"@up685.proto SetShutter $(PORT).SER" )
	field( FLNK,	"$(P)$(R):DoReport" )
}

record( longin,	"$(P)$(R):ReadRawShutter" )
{
	field( DESC,	"Shutter from camera report" )
	field( DTYP,	"stream" )
	field( INP,		"@up685.proto ReadShutterMode $(PORT).SER" )
	field( SCAN,	"I/O Intr" )
}

record( calcout, "$(P)$(R):CalcShutterIn" )
{
	field( DESC,	"Calc shtr val" )
	field( INPA,	"$(P)$(R):ReadRawShutter CPP" )
	field( INPB,	"$(P)$(R):ShutterMode CPP" )
	field( CALC,	"B ? A : (A>5?A+1:A)" )
	field( OUT,		"$(P)$(R):ReadShutter PP" )
	field( OOPT,	"On Change" )
}

record( mbbi,	"$(P)$(R):ReadShutter" )
{
	field( DESC,	"Camera shutter speed" )
	field( ZRVL,	"0"	)
	field( ONVL,	"1"	)
	field( TWVL,	"2"	)
	field( THVL,	"3"	)
	field( FRVL,	"4"	)
	field( FVVL,	"5"	)
	field( SXVL,	"6"	)
	field( SVVL,	"7"	)
	field( EIVL,	"8"	)
	field( NIVL,	"9"	)
	field( TEVL,	"10"	)
	field( ELVL,	"11"	)
	field( TVVL,	"12"	)
	field( TTVL,	"13"	)
	field( FTVL,	"14"	)
	field( FFVL,	"15"	)
	field( ZRST,	"1/110"	)
	field( ONST,	"1/220"	)
	field( TWST,	"1/440"	)
	field( THST,	"1/900"	)
	field( FRST,	"1/1800"	)
	field( FVST,	"1/3500"	)
	field( SXST,	"1/4500"	)
	field( SVST,	"1/7000"	)
	field( EIST,	"1/9000"	)
	field( NIST,	"1/14000"	)
	field( TEST,	"1/18000"	)
	field( ELST,	"1/22000"	)
	field( TVST,	"1/28000"	)
	field( TTST,	"1/37000"	)
	field( FTST,	"1/55000"	)
	field( FFST,	"1/110000"	)
}

record( mbbi,	"$(P)$(R):ShutterMode" )
{
	field( DESC,	"Camera shutter mode" )
	field( DTYP,	"stream" )
	field( INP,		"@up685.proto ReadFreeRun $(PORT).SER " )
	field( SCAN,	"I/O Intr" )
	field( ZRVL,	"0"	)
	field( ONVL,	"1"	)
	field( ZRST,	"Trig"		)
	field( ONST,	"FreeRun"	)
}

record( bo,	"$(P)$(R):AutoGain" )
{
	field( DESC,	"Not supported" )
	field( DOL,		"0" )
	field( ZNAM,	"Disabled" )
	field( ONAM,	"Enabled" )
}

record( stringin, "$(P)$(R):ID" )
{
	field( DESC,	"Camera reported model" )
	field( VAL,	"UP685" )
}

# Effective transmit rate is 40Mhz PixelClock
record( ao, "$(P)$(R)XmitRate" )
{
    field( DOL,  "40.0e6" )
    field( EGU,  "Px/Sec" )
    field( PREC, "3" )
    field( PINI, "YES" )
    info( autosaveFields, "VAL" )
}   


# Possible TODO: Add support for
#	WB,WB?	Set and read white balance, Color cameras only
#	OFS,OFS? Set and read black offset, Color cameras only
#	USIx;y and USI?x	Set and read user defined integers
#	USSx;y and USS?x	Set and read user defined strings
#	RQ		Initiate soft request readout
#	ROIx;y;w;h		Set ROI x offset, y offset, width, and height
